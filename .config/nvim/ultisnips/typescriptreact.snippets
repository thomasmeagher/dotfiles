# Based on https://github.com/epilande/vim-react-snippets
extends typescript

snippet pt "Props type" w
type Props = {
    $1: $2$0
}
endsnippet

snippet fc "Function component" w
${1:export }const ${2:Component}${3:: React.FC<Props>} = (${4:props}) => {
    return ${5:<div>merp</div>}
}
endsnippet

snippet us.cb "useCallback" w
useCallback(
	  () => {
		  $1
	  },
	  [$2],
)$0
endsnippet

snippet us.e "useEffect" w
useEffect(() => {
    $1
})$0
endsnippet

snippet us.er "useEffect with return" w
useEffect(() => {
    $1
	  return () => {
      $2
	  }
})$0
endsnippet

snippet us.m "useMemo" w
const $1 = useMemo(() => {
	  $2
}, [$3])$0
endsnippet

snippet us.r "useReducer" w
const $1Reducer = (state, action) => {
	switch (action.type) {
		default:
			return state
	}
}
const [$1, dispatch] = useReducer($1Reducer, ${2:${VISUAL:initialState}})$0
endsnippet

snippet us.rf "useRef" w
const $1 = useRef($2)$0
endsnippet

snippet us.s "useState" w
const [$1, set${1/\w+\s*/\u$0/g}] = useState${2:<string>}(${3:''})$0
endsnippet
